var documenterSearchIndex = {"docs":
[{"location":"diffeqfinancial/#API","page":"API","title":"API","text":"","category":"section"},{"location":"diffeqfinancial/","page":"API","title":"API","text":"Modules = [DiffEqFinancial]","category":"page"},{"location":"diffeqfinancial/#DiffEqFinancial.BlackScholesProblem","page":"API","title":"DiffEqFinancial.BlackScholesProblem","text":"d ln S(t) = (r(t) - fracΘ(tS)^22)dt + σ dW_t\n\nSolves for log S(t).\n\n\n\n","category":"type"},{"location":"diffeqfinancial/#DiffEqFinancial.CoxIngersollRoss","page":"API","title":"DiffEqFinancial.CoxIngersollRoss","text":"dr = kappa(theta - r)dt + sigmasqrtr dW_t\n\nThe Cox-Ingersoll-Ross (CIR) model is commonly used for short-rate modeling in interest rate theory.\n\nThis type represents the exact transition law of the CIR process, and can be used to sample directly from the known non-central (\\chi^2) distribution implied by the model.\n\nFields\n\nκ: Mean-reversion speed.\nθ: Long-run mean level.\nσ: Volatility coefficient.\n\nThis exact law is used internally by CIRNoise to create a NoiseProcess with the correct distributional dynamics.\n\n\n\n","category":"type"},{"location":"diffeqfinancial/#DiffEqFinancial.CoxIngersollRoss-NTuple{7, Any}","page":"API","title":"DiffEqFinancial.CoxIngersollRoss","text":"Samples the CIR process exactly using the non-central chi-squared transition distribution.\n\nArguments\n\nDW: Not used but required for interface compatibility.\nW: Path history; last value is used for adjustment.\ndt: Time step size.\nu: Current value (not used in exact sampling).\np: Parameters (not used here).\nt: Current time (not used here).\nrng: Random number generator.\n\nReturns an increment from the single sample from the exact transition distribution.\n\n\n\n","category":"method"},{"location":"diffeqfinancial/#DiffEqFinancial.CIRNoise","page":"API","title":"DiffEqFinancial.CIRNoise","text":"dr = κ(θ - r)dt + σr dW_t\n\nThe Cox-Ingersoll-Ross (CIR) model is commonly used for short-rate modeling in interest rate theory. This is a distributionally-exact process, leveraging the known χ² transition law of the process. The sampling leverages Distributions.jl. This method is way slower than the discretized version, hence it is advisable to use it only when simulation at few time-points is needed with no bias.\n\n\n\n","category":"function"},{"location":"diffeqfinancial/#DiffEqFinancial.CIRProblem-NTuple{5, Any}","page":"API","title":"DiffEqFinancial.CIRProblem","text":"dr = κ(θ - r)dt + σr dW_t\n\nThe Cox-Ingersoll-Ross (CIR) model is commonly used for short-rate modeling in interest rate theory.\n\nKeyword Arguments\n\nmodifier: A function applied inside the square root in the diffusion term. It ensures rate positivity which can break due to discretization error.\n\n\n\n","category":"method"},{"location":"diffeqfinancial/#DiffEqFinancial.ExtendedOrnsteinUhlenbeckProblem-NTuple{5, Any}","page":"API","title":"DiffEqFinancial.ExtendedOrnsteinUhlenbeckProblem","text":"dx = a(b(t)-x)dt + σ dW_t\n\n\n\n","category":"method"},{"location":"diffeqfinancial/#DiffEqFinancial.GeneralizedBlackScholesProblem-NTuple{6, Any}","page":"API","title":"DiffEqFinancial.GeneralizedBlackScholesProblem","text":"d ln S(t) = (r(t) - q(t) - fracΘ(tS)^22)dt + σ dW_t\n\nSolves for log S(t).\n\n\n\n","category":"method"},{"location":"diffeqfinancial/#DiffEqFinancial.GeometricBrownianMotionProblem-NTuple{4, Any}","page":"API","title":"DiffEqFinancial.GeometricBrownianMotionProblem","text":"dx = μx dt + σx dW_t\n\n\n\n","category":"method"},{"location":"diffeqfinancial/#DiffEqFinancial.HestonProblem-NTuple{7, Any}","page":"API","title":"DiffEqFinancial.HestonProblem","text":"dS = μSdt + sqrtvSdW_1\ndv = κ(Θ-v)dt + σsqrtvdW_2\ndW_1 dW_2 = ρ dt\n\nKeyword Arguments\n\nmodifier: A function applied inside the square root in the diffusion term. By default, modifier ensures numerical stability when u[2] becomes slightly negative due to discretization errors. Without this, the square root of a negative number would result in a domain error. You may override this if using an alternative regularization strategy or if you're certain u[2] will remain positive.\n\n\n\n","category":"method"},{"location":"diffeqfinancial/#DiffEqFinancial.MfStateProblem-NTuple{4, Any}","page":"API","title":"DiffEqFinancial.MfStateProblem","text":"dx = σ(t)e^at dW_t\n\n\n\n","category":"method"},{"location":"diffeqfinancial/#DiffEqFinancial.OrnsteinUhlenbeckProblem-NTuple{5, Any}","page":"API","title":"DiffEqFinancial.OrnsteinUhlenbeckProblem","text":"dx = a(r-x)dt + σ dW_t\n\n\n\n","category":"method"},{"location":"#DiffEqFinancial.jl","page":"Home","title":"DiffEqFinancial.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This repository holds problem definitions for common financial models for use in the DifferentialEquations ecosystem. The goal is to be a feature-complete set of solvers for the types of problems found in libraries like QuantLib. For example, one can easily specify, solve, and plot the solution for a trajectory of a Heston process via the commands:","category":"page"},{"location":"","page":"Home","title":"Home","text":"prob = HestonProblem(μ,κ,Θ,σ,ρ,u₀)\nsol = solve(prob)\nplot(sol)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Full documentation is in the DifferentialEquations.jl models documentation","category":"page"},{"location":"","page":"Home","title":"Home","text":"These solvers use DifferentialEquations.jl, meaning that high-performance and high order algorithms are available.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The project is looking for contributors who would like to implement more models. If you're interested and need help getting started, talk to Chris Rackauckas in the Gitter chat.","category":"page"},{"location":"#Contributing","page":"Home","title":"Contributing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Please refer to the SciML ColPrac: Contributor's Guide on Collaborative Practices for Community Packages for guidance on PRs, issues, and other matters relating to contributing to SciML.\nSee the SciML Style Guide for common coding practices and other style decisions.\nThere are a few community forums:\nThe #diffeq-bridged and #sciml-bridged channels in the Julia Slack\nThe #diffeq-bridged and #sciml-bridged channels in the Julia Zulip\nOn the Julia Discourse forums\nSee also SciML Community page","category":"page"},{"location":"#Reproducibility","page":"Home","title":"Reproducibility","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<details><summary>The documentation of this SciML package was built using these direct dependencies,</summary>","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg # hide\nPkg.status() # hide","category":"page"},{"location":"","page":"Home","title":"Home","text":"</details>","category":"page"},{"location":"","page":"Home","title":"Home","text":"<details><summary>and using this machine and Julia version.</summary>","category":"page"},{"location":"","page":"Home","title":"Home","text":"using InteractiveUtils # hide\nversioninfo() # hide","category":"page"},{"location":"","page":"Home","title":"Home","text":"</details>","category":"page"},{"location":"","page":"Home","title":"Home","text":"<details><summary>A more complete overview of all dependencies and their versions is also provided.</summary>","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg # hide\nPkg.status(;mode = PKGMODE_MANIFEST) # hide","category":"page"},{"location":"","page":"Home","title":"Home","text":"</details>","category":"page"},{"location":"","page":"Home","title":"Home","text":"You can also download the\n<a href=\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"using TOML\nversion = TOML.parse(read(\"../../Project.toml\",String))[\"version\"]\nname = TOML.parse(read(\"../../Project.toml\",String))[\"name\"]\nlink = \"https://github.com/SciML/\"*name*\".jl/tree/gh-pages/v\"*version*\"/assets/Manifest.toml\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"\">manifest</a> file and the\n<a href=\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"using TOML\nversion = TOML.parse(read(\"../../Project.toml\",String))[\"version\"]\nname = TOML.parse(read(\"../../Project.toml\",String))[\"name\"]\nlink = \"https://github.com/SciML/\"*name*\".jl/tree/gh-pages/v\"*version*\"/assets/Project.toml\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"\">project</a> file.","category":"page"}]
}
